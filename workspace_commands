ROS2 Topics to record
power
camera
imu
waterlinked position
pressure sensor
distance sensor



ros2 run apriltag_ros apriltag_node --ros-args \
    -r image_rect:=/camera/rgb/image_raw \
    -r camera_info:=/camera_info \
    --params-file /home/reefranger/Desktop/ReefRanger/robot/aki/src/apriltag_ros/cfg/tags_36h11.yaml


ros2 bag record -o subset2 /rosout /tf /waterlinked/position /map_pointcloud2 /camera_path /imu /power /depth_desired /ultrasonic_distance /depth /tracked/table /image_raw/compressed /tf /detections /log/locator_pid /quadrant_centers /bcu/manual /log/STMcom /log/slam_pid /leakage /log/STMThruster /log/bcu 

ros2 bag record -o apriltagbag30064 /rosout /tf /map_pointcloud2 /camera_path /imu /power /depth_desired /ultrasonic_distance /depth /tracked/table /image_raw/compressed /detections /bcu/manual /log/STMcom /log/slam_pid /leakage /log/STMThruster /log/bcu /yolo/detections

ros2 bag record -o apriltagbag3006 /rosout /depth_desired /ultrasonic_distance /depth /bcu/manual /log/STMcom /log/bcu



#First time installing
sudo rosdep init
rosdep update
rosdep install -i --from-path src --rosdistro humble -y
rosdep install --from-paths src --ignore-src -r -y

#Auto source
nano ~/.bashrc
source /home/reefranger/Desktop/ReefRanger/robot/aki/install/setup.bash

#Build and source
cd /home/reefranger/Desktop/ReefRanger/robot/aki
colcon build
source install/setup.bash

#Launch Robot(Yolo, Slam, etc)
cd /home/reefranger/Desktop/ReefRanger/robot/aki/
ros2 launch robot_launch.py

#Launch Simulation
cd /home/reefranger/Desktop/ReefRanger/robot/sim
ros2 launch sim_launch.py

#Launch Gazebo
cd /home/reefranger/Desktop/ReefRanger/robot/sim
gz sim underwater.sdf

#Launch state machine
ros2 run nav_tools statemachine


# Modify ORB-SLAM3 frame ID
cd /home/reefranger/Desktop/ReefRanger/robot/aki/src/orbslam3_ros
nano config.yaml

# In the configuration file, look for the parameter related to the frame ID, such as:
# frame_id: "camera_link"
# Modify it to the desired frame ID, e.g.:
# frame_id: "map"

# Save the file and rebuild the workspace
cd /home/reefranger/Desktop/ReefRanger/robot/aki
colcon build
source install/setup.bash

#Slam 
ros2 run nav_slam pid
ros2 action send_goal slam_nav_pid nav2_msgs/action/NavigateToPose \
"{pose: { header: { frame_id: 'map' }, pose: { position: { x: 2.0, y: 3.0, z: 0.0 }, orientation: { w: 1.0 }}}}"
#Activate Slam
ros2 action send_goal activateslam slam_interface/action/ActivateSlam "{activate: True}"
#yolo
ros2 run nav_yolo pid
ros2 action send_goal yolo_nav_pid nav2_msgs/action/NavigateToPose \
"{pose: { header: { frame_id: 'map' }, pose: { position: { x: 2.0, y: 3.0, z: 0.0 }, orientation: { w: 1.0 }}}}"
#locator
ros2 run nav_locator pid
ros2 action send_goal rov_loc_nav_pid nav2_msgs/action/NavigateToPose \
"{pose: { header: { frame_id: 'map' }, pose: { position: { x: 2.0, y: 0.0, z: 0.0 }, orientation: { w: 1.0 }}}}"


ros2 action send_goal /feeding slam_interface/action/ActivateSlam "{activate: true}"




ros2 run ros_ign_bridge parameter_bridge /clock@rosgraph_msgs/msg/Clock@ignition.msgs.Clock
ros2 run ros_ign_bridge parameter_bridge /clock@rosgraph_msgs/msg/Clock[ignition.msgs.Clock



ros2 action send_goal navigatetable move_interface/action/Move "{targetx: 1, targety: 1}"
ros2 action send_goal gototable gototable_interface/action/GoTable "{targetx: 400, targety: 300}"
ros2 action send_goal godownserver godown_interface/action/Godownint "{targetx: 1, targety: 1}"
ros2 action send_goal activateslam slam_interface/action/ActivateSlam "{activate: True}"

ros2 action send_goal yolo_nav_pid gototable_interface/action/GoTable "{targetx: 400, targety: 300}"


ros2 lifecycle get /yolo/yolov8_node 
ros2 lifecycle set /yolo/yolov8_node deactivate
ros2 lifecycle set /yolo/yolov8_node activate




self._action_client = ActionClient(self, Move, 'navigatetable')
from move_interface.action import Move

from godown_interface.action import Godownint



colcon build --symlink-install